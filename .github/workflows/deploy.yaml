name: Deploy to AWS

on:
    push:
        branches: [main]

jobs:
    docker-build:
        runs-on: ubuntu-latest
        environment: production
        defaults:
            run:
                shell: bash
                working-directory: ./__scripts
        permissions:
            id-token: write
            contents: read

        steps:
            - uses: actions/checkout@v3
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{secrets.DOCKERHUB_USERNAME}}
                  password: ${{secrets.DOCKERHUB_ACCESSTOKEN}}

            # https://aws.amazon.com/blogs/security/use-iam-roles-to-connect-github-actions-to-actions-in-aws/
            - name: Login AWS
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::623557680318:role/GitHubAction-AssumeRoleWithAction.
                  aws-region: ${{secrets.AWS_REGION}}

            - name: Lookup EC2 Instance ID
              id: instance_status
              run: echo "$(./getEC2InstanceIDbyName.sh ${{secrets.EC2_INSTANCENAME}})" >> $GITHUB_OUTPUT

            - name: Run EC2 Instance if stopped
              if: ${{steps.instance_status.outputs}} == ''
              run: aws ec2 start-instances --instance-id ${{steps.instance_status.outputs.INSTANCE_ID}}

              # Wait for the instance to come online
            - name: Lookup EC2 Instance Public IP
              id: instance_public_ip
              run: echo "$(./awaitEC2Start.sh ${{secrets.EC2_INSTANCENAME}})" >> $GITHUB_OUTPUT

            - name: Copy Dockerfile to Instance
              uses: appleboy/scp-action@v0.1.4
              with:
                  host: ${{ steps.instance_public_ip.outputs }}
                  username: ${{ secrets.EC2_USERNAME }}
                  key: ${{ secrets.GHA_EC2_SSH_ACCESSKEY }}
                  source: 'docker-compose.prod.yaml, proxy/*, __scripts/zeroDowntimeDeployment.sh'
                  target: './app'

            - name: Pull and Replace latest Image
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ec2-user@${{ steps.instance_public_ip.outputs }}
                  username: ${{ secrets.EC2_USERNAME }}
                  key: ${{ secrets.GHA_EC2_SSH_ACCESSKEY }}
                  script: zeroDowntimeDeployment.sh ${{secrets.DOCKERHUB_USERNAME}}
